version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dogo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: dogo_dev
      POSTGRES_USER: dogo
      POSTGRES_PASSWORD: dogo_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dogo -d dogo_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: dogo-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://dogo:dogo_password@postgres:5432/dogo_dev
      - JWT_SECRET=dogo-super-secret-jwt-key-change-in-production
      - JWT_REFRESH_SECRET=dogo-super-secret-refresh-key-change-in-production
      - PORT=3001
      - NODE_ENV=development
      - CORS_ORIGIN=http://localhost:5173
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    command: npm run dev

  # Frontend Development Server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: dogo-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data: